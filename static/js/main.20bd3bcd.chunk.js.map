{"version":3,"sources":["SearchCard.js","Search.js","LibraryCard.js","Library.js","hooks/useFavoriteStorage.js","App.js","serviceWorker.js","index.js"],"names":["Card","styled","div","CoverContainer","Cover","img","Description","Star","span","props","fav","SearchCard","release","toggleFav","isFav","useState","cover","setCover","useEffect","id","axios","get","then","res","data","catch","e","console","log","role","aria-label","onClick","preventDefault","src","images","thumbnails","small","title","count","Form","form","Input","input","Search","favorites","onRemove","onAdd","setData","query","setQuery","onSearch","useCallback","search","encodeURIComponent","fetchRelease","style","flex","onSubmit","type","placeholder","value","onChange","target","marginLeft","releases","filter","r","score","map","includes","key","LibraryCard","fetchCover","Library","useFavouritesState","createPersistedState","window","localStorage","Layout","App","favourites","setFavourites","Array","isArray","add","find","v","remove","ind","findIndex","splice","useFavouritesStorage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.20bd3bcd.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport axios from 'axios'\nimport styled from 'styled-components';\n\nconst fetchCover = (id) => {\n  return axios.get('https://coverartarchive.org/release/'+id)\n}\n\nconst Card = styled.div`\n  width: 600px;\n  border: 1px solid #fff;\n  border-radius: 3px;\n  padding: 10px;\n  display: flex;\n`\nconst CoverContainer = styled.div`\n  background: linear-gradient(180deg, rgba(219, 0, 255, 0.18) 0%, rgba(0, 255, 56, 0.18) 100%);\n  width: 200px;\n  min-height: 200px;\n  position: relative;\n`\nconst Cover = styled.img`\n  width: 200px;\n  min-height: 200px;\n`\nconst Description = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`\nconst Star = styled.span`\n position: absolute;\n top: 5px;\n right: 7px;\n filter: grayscale(${props => props.fav ? \"0\" : \"1\"});\n cursor: pointer;\n outline: none;\n   \n`\nexport const SearchCard = ({\n    release,\n    toggleFav,\n    isFav\n  }) => {\n  const [cover, setCover] = useState(null)\n    useEffect(() => {\n      fetchCover(release.id).then(res => {\n\n        setCover(res.data)\n      }).catch(e => console.log(e))\n    }, [release.id])\n return (\n   <Card>\n      <CoverContainer>\n        <Star role=\"img\" aria-label=\"isFavorite\" fav={isFav} onClick={(e) => {e.preventDefault();toggleFav(!isFav)}}>⭐</Star>\n        {\n          cover && <Cover src={cover.images[0].thumbnails.small} /> \n          \n        }\n      </CoverContainer>\n      <div>\n      <Description >\n        <div><b>Title: </b>{release.title}</div>\n        <div><b>ID: </b>{release.id}</div>\n        <div><b>Country: </b>{release.count}</div>\n\n      </Description>\n\n      </div>\n      \n      \n\n\n\n      \n   </Card>\n )\n}\n","import React, {\n  useState, useCallback\n} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios'\n\nimport { SearchCard } from './SearchCard'\n\nconst fetchRelease = (release) => {\n  const search = `release:${release}`\n  const url = 'http://musicbrainz.org/ws/2/release/?query='\n  return axios.get(url + encodeURIComponent(search) + '&fmt=json')\n}\n\n\nconst Form = styled.form`\n  padding: 10px;\n  display: flex;\n`\n\nconst Input = styled.input`\n  width: 300px;\n  height: 30px;\n  font-size: 16px;\n`\n\nfunction Search({favorites, onRemove, onAdd}) {\n  const [data, setData] = useState('')\n  const [query, setQuery] = useState('')\n\n  const onSearch = useCallback(() => {\n    fetchRelease(query)\n    .then(res => {\n        setData(res.data)\n      }\n    )\n    \n    \n  }, [query])\n  return (\n    <div style={{flex: 1}}>\n      <Form onSubmit={(e) => {e.preventDefault(); onSearch()}}>\n        <Input type=\"text\" placeholder=\"Type album name to search\" value={query} onChange={(e)=> setQuery(e.target.value)}/>\n        <button onClick = { onSearch } style={{marginLeft: '10px'}}>\n           Search \n        </button>\n      </Form>\n      <div>\n        {  \n          data &&\n           data.releases\n           .filter(r => r.score > 95)\n           .map(r => {\n            const isFav = favorites.includes(r.id);\n            return ( \n            < SearchCard \n              isFav={isFav} \n              key={r.id} \n              release = { r } \n              toggleFav={(isFav) => {!isFav ? onRemove(r.id) : onAdd(r.id)}} />\n            )})\n\n        }\n\n      </div>\n      \n\n\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios'\nimport styled from 'styled-components';\n\nconst fetchCover = (id) => {\n  return axios.get('https://coverartarchive.org/release/'+id)\n}\n\nconst Card = styled.div`\n  width: 600px;\n  border: 1px solid #fff;\n  border-radius: 3px;\n  padding: 10px;\n  display: flex;\n`\nconst CoverContainer = styled.div`\n  background: linear-gradient(180deg, rgba(219, 0, 255, 0.18) 0%, rgba(0, 255, 56, 0.18) 100%);\n  width: 200px;\n  min-height: 200px;\n  position: relative;\n`\nconst Cover = styled.img`\n  width: 200px;\n  min-height: 200px;\n`\nconst Description = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`\nconst Star = styled.span`\n position: absolute;\n top: 5px;\n right: 7px;\n filter: grayscale(${props => props.fav ? \"0.1\" : \"1\"});\n cursor: pointer;\n outline: none;\n   \n`\nexport const LibraryCard = ({\n    toggleFav,\n    id\n  }) => {\n  const [cover, setCover] = useState(null)\n    useEffect(() => {\n      fetchCover(id).then(res => {\n\n        setCover(res.data)\n      }).catch(e => console.log(e))\n    }, [id])\n return (\n   <Card>\n      <CoverContainer>\n        <Star role=\"img\" aria-label=\"isFavorite\" fav={true} onClick={(e) => {e.preventDefault();toggleFav(false)}}>⭐</Star>\n        {\n          cover && <Cover src={cover.images[0].thumbnails.small} /> \n          \n        }\n      </CoverContainer>\n      <div>\n      <Description >\n\n      </Description>\n\n      </div>\n      \n      \n\n\n\n      \n   </Card>\n )\n}\n","import React from 'react';\n\nimport { LibraryCard } from './LibraryCard'\n\n export const Library = ({favorites,onRemove})=>{\n\n    \n  return (\n    <div style={{flex: 1}}>\n      <h1> Library </h1> \n      <div>\n        {  \n          favorites && favorites.map((id) => (\n                < LibraryCard \n                isFav={true} \n                key={id} \n                id={id}\n                toggleFav={ () => onRemove(id)} />)\n        )}\n      </div>\n    </div>\n  );\n}\n","import createPersistedState from \"use-persisted-state\";\nimport { useEffect } from \"react\";\nconst useFavouritesState = createPersistedState(\n  \"favourites\",\n  window.localStorage\n);\n\nexport const useFavouritesStorage = () => {\n  const [favourites, setFavourites] = useFavouritesState([]);\n  useEffect(() => {\n    if (!Array.isArray(favourites)) setFavourites();\n  }, [favourites, setFavourites]);\n  return [\n    favourites,\n    {\n      add: (id) => {\n\n        if (favourites.find((v) => v === id)) return false;\n        setFavourites([id, ...favourites]);\n        return true;\n      },\n      remove: (id) => {\n        const ind = favourites.findIndex((v) => v === id);\n        if (ind > -1) {\n          favourites.splice(ind, 1);\n          setFavourites([...favourites]);\n          return true;\n        } else return false;\n      },\n    },\n  ];\n};\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport Search from './Search'\nimport {Library} from './Library'\nimport {useFavouritesStorage} from './hooks/useFavoriteStorage'\n\nconst Layout = styled.div`\n  display: flex;\n\n`\n\nfunction App() {\n  const [favorites, {add, remove}] = useFavouritesStorage()\n  return (\n   <Layout>\n     <Search favorites={favorites} onRemove={remove} onAdd={add} />\n     <Library favorites={favorites} onRemove={remove}/>\n   </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}